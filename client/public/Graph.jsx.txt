import * as d3 from "d3";
import { useEffect, useRef } from "react";
import indiaData from "../assets/india.json";

const IndiaMap = () => {
  const ref = useRef();

  useEffect(() => {
    const width = 800;
    const height = 600;

    const svg = d3.select(ref.current)
      .attr("width", width)
      .attr("height", height);

    const projection = d3.geoMercator().fitSize([width, height], indiaData);
    const path = d3.geoPath().projection(projection);

    // Draw India map
    svg.selectAll("path")
      .data(indiaData.features)
      .enter()
      .append("path")
      .attr("d", path)
      .attr("fill", "#cce5ff")
      .attr("stroke", "black")
      .attr("stroke-width", 1);

    // Hotspots
    const hotspots = [
      { name: "Delhi", lat: 28.6139, lon: 77.2090 },
      { name: "Mumbai", lat: 19.0760, lon: 72.8777 },
      { name: "Kolkata", lat: 22.5726, lon: 88.3639 },
      { name: "Bangalore", lat: 12.9716, lon: 77.5946 },
    ];

    // Add circles for hotspots
    svg.selectAll("circle")
      .data(hotspots)
      .enter()
      .append("circle")
      .attr("cx", d => projection([d.lon, d.lat])[0])
      .attr("cy", d => projection([d.lon, d.lat])[1])
      .attr("r", 6)
      .attr("fill", "red")
      .attr("stroke", "white")
      .attr("stroke-width", 1.5);

    // Add labels
    svg.selectAll("text")
      .data(hotspots)
      .enter()
      .append("text")
      .attr("x", d => projection([d.lon, d.lat])[0] + 8)
      .attr("y", d => projection([d.lon, d.lat])[1] + 4)
      .text(d => d.name)
      .style("font-size", "12px")
      .style("fill", "black");
  }, []);

  return <svg ref={ref}></svg>;
};

export default IndiaMap;
